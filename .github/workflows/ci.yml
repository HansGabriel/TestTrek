name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]

# You can leverage Vercel Remote Caching with Turbo to speed up your builds
# @link https://turborepo.org/docs/core-concepts/remote-caching#remote-caching-on-vercel-builds
env:
  DATABASE_URL: postgresql://prisma:prisma@localhost:5433/tests
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}}
  CLERK_SECRET_KEY: ${{secrets.CLERK_SECRET_KEY}}
  CLOUDINARY_CLOUD_NAME: ${{secrets.CLOUDINARY_CLOUD_NAME}}
  CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY}}
  CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET}}
  WEBHOOK_SECRET: ${{secrets.WEBHOOK_SECRET}}

jobs:
  build-lint:
    env:
      DATABASE_URL: file:./db.sqlite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install deps (with cache)
        run: pnpm install

      - name: Next.js cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}apps/nextjs/.next/cache
          key: ${{ runner.os }}-${{ runner.node }}-${{ hashFiles('**/pnpm-lock.yaml') }}-nextjs

      - name: Docker Compose
        uses: isbang/compose-action@v1.4.0
        with:
          compose_file: docker-compose.yml

      - name: Push schema
        run: pnpm db-push

      - name: Build, lint and type-check
        run: pnpm turbo db-generate build lint type-check test

      - name: Check workspaces
        run: pnpm manypkg check
