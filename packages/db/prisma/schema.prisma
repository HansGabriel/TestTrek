// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(cuid())
    email     String   @unique
    userId    String   @unique
    username  String
    firstName String
    lastName  String
    imageUrl  String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Post {
    id      String @id @default(cuid())
    title   String
    content String
}

model FavoriteTest {
    id        String   @id @default(cuid())
    userId    String
    testId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Test {
    id          String             @id @default(cuid())
    userId      String
    imageUrl    String
    title       String
    description String             @db.Text
    visibility  Visibility
    keywords    Keyword[]
    createdAt   DateTime           @default(now())
    updatedAt   DateTime           @updatedAt
    collections TestOnCollection[]
    questions   Question[]
}

model Question {
    id              String       @id @default(cuid())
    testId          String
    title           String
    image           String?
    time            Int
    points          Int
    type            QuestionType
    test            Test         @relation(fields: [testId], references: [id])
    choices         Choice[]
    answer          String?
    possibleAnswers String[]
}

model Choice {
    id         String   @id @default(cuid())
    questionId String
    text       String
    isCorrect  Boolean
    question   Question @relation(fields: [questionId], references: [id])
}

model Keyword {
    id        String   @id @default(cuid())
    name      String
    test      Test     @relation(fields: [testId], references: [id])
    testId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Collection {
    id        String             @id @default(cuid())
    userId    String
    title     String
    imageUrl  String
    createdAt DateTime           @default(now())
    updatedAt DateTime           @updatedAt
    tests     TestOnCollection[]
}

model TestOnCollection {
    test          Test       @relation(fields: [testId], references: [id])
    testId        String
    collection    Collection @relation(fields: [collectionsId], references: [id])
    collectionsId String
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt

    @@id([testId, collectionsId])
}

enum Visibility {
    public
    private
}

enum QuestionType {
    multiple_choice
    true_or_false
    multi_select
    identification
    enumeration
}
